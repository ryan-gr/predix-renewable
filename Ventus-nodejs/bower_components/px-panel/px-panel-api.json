{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "### Usage\n\nDocked to its parent container (default):\n\n    <px-panel>\n      <div slot=\"content\">Content</div>\n    </px-panel>\n\n#### Note: The parent container should be positioned (e.g. relative, absolute, or fixed; not static).\n\nDocked to the window:\n\n    <px-panel position=\"left\" fixed>\n      <div slot=\"content\">Content</div>\n    </px-panel>\n\nFull configuration example:\n\n    <px-panel background=\"dark\" fixed floating minimizable>\n\n      // Use this slot for the panel in its minimized state.\n      // Write your own openPanel handler that calls .open() on the px-panel\n      <div slot=\"minimized\">\n        <px-icon icon=\"px-nav:expand\" style=\"transform:rotate(-90deg)\" on-tap=\"openPanel\"></px-icon>\n      </div>\n\n      // Use this slot for the main content of your panel in its opened state.\n      // Write your own closePanel handler that calls .close() on the px-panel\n      <div slot=\"content\">\n        <px-icon icon=\"px-nav:close\" on-tap=\"closePanel\"></px-icon>\n        // Other content with appropriate layout\n        <button class=\"btn\" on-tap=\"closePanel\">Cancel</button>\n        <button class=\"btn btn--primary\" on-tap=\"closePanel\">Apply</button>\n      </div>\n\n    </px-panel>\n\n### Styling\n\nCustom property | Description\n:------------ | :-------------\n`--px-panel-size` | Width (left/right) or height (top/bottom) of the panel\n`--px-panel-size--minimized` | Width (left/right) or height (top/bottom) of the panel when \"minimized\"\n`--px-panel-bg-color--light` | Background color for \"light\" panels\n`--px-panel-bg-color--medium` | Background color for \"medium\" panels\n`--px-panel-bg-color--dark` | Background color for \"dark\" panels\n`--px-panel-offset--top` | Offset for top of panel when \"floating\"\n`--px-panel-offset--right` | Offset for right side of panel when \"floating\"\n`--px-panel-offset--bottom` | Offset for bottom of panel when \"floating\"\n`--px-panel-offset--left` | Offset for left side of panel when \"floating\"\n`--px-panel-z-index` | Z-index of the panel - should be adjusted if multiple overlapping panels are possible",
      "summary": "",
      "path": "dist/px-panel.js",
      "properties": [
        {
          "name": "_parentResizable",
          "type": "Object",
          "description": "The closest ancestor element that implements `IronResizableBehavior`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 39,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_parentResizableChanged\""
            }
          },
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_notifyingDescendant",
          "type": "boolean",
          "description": "True if this element is currently notifying its descendant elements of\nresize.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 45,
              "column": 6
            },
            "end": {
              "line": 48,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "keyEventTarget",
          "type": "Object",
          "description": "Used by iron-a11y-keys-behavior.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 9
            },
            "end": {
              "line": 29,
              "column": 82
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "stopKeyboardEventPropagation",
          "type": "boolean",
          "description": "If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 289,
              "column": 8
            },
            "end": {
              "line": 292,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_boundKeyHandlers",
          "type": "Array",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 294,
              "column": 8
            },
            "end": {
              "line": 299,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_imperativeKeyBindings",
          "type": "Object",
          "description": "own properties of everything on the \"prototype\".",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 303,
              "column": 8
            },
            "end": {
              "line": 308,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "keyBindings",
          "type": "Object",
          "description": "Used by iron-a11y-keys-behavior.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 2,
              "column": 7
            },
            "end": {
              "line": 2,
              "column": 34
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "hostAttributes",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 2,
              "column": 35
            },
            "end": {
              "line": 2,
              "column": 67
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "position",
          "type": "string",
          "description": "Where to place the panel - one of `top`, `bottom`, `left`, or `right`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 4,
              "column": 8
            },
            "end": {
              "line": 4,
              "column": 69
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_handleResize\""
            }
          },
          "defaultValue": "\"right\""
        },
        {
          "name": "opened",
          "type": "boolean",
          "description": "Whether the panel is currently open (expanded).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 6,
              "column": 9
            },
            "end": {
              "line": 6,
              "column": 79
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_handleResize\""
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "fixed",
          "type": "boolean",
          "description": "If set to true, the panel will have `position:fixed` so it will\nbe attached to the browser window instead of its parent container.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 9,
              "column": 9
            },
            "end": {
              "line": 9,
              "column": 66
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_handleResize\""
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "persistent",
          "type": "boolean",
          "description": "If set to true, the panel will be opened and calls to the `close()` method will be ignored.\nMutating the `opened` property will still force a close of the panel.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 12,
              "column": 9
            },
            "end": {
              "line": 12,
              "column": 76
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_persistentChanged\""
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "background",
          "type": "string",
          "description": "Whether to display the panel with a `light`, `medium`, or `dark` background.\nThese terms are relative, and can be used in conjunction with px-theme,\npx-dark-theme, or your custom theme or CSS variables to toggle between 3 different\nbackground colors.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 17,
              "column": 9
            },
            "end": {
              "line": 17,
              "column": 47
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"light\""
        },
        {
          "name": "floating",
          "type": "boolean",
          "description": "If set to true, the panel will appear with an offset relative to the screen / container edges.\nCan be overridden or customized using the CSS variables.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 20,
              "column": 9
            },
            "end": {
              "line": 20,
              "column": 44
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "minimizable",
          "type": "boolean",
          "description": "If set to true, the panel will not fully collapse when closed. It will appear in a minimized state.\nYou can use the content slot `minimized` to determine what will appear inside the panel while minimized\n(likely an icon or button for fully opening the panel).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 24,
              "column": 9
            },
            "end": {
              "line": 24,
              "column": 47
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_fullSize",
          "type": "boolean",
          "description": "Used internally to determine if the panel should display at full-width or full-height\nfor mobile responsiveness and space-constrained situations.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 27,
              "column": 9
            },
            "end": {
              "line": 27,
              "column": 45
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "created",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 55,
              "column": 4
            },
            "end": {
              "line": 60,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 327,
              "column": 6
            },
            "end": {
              "line": 329,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 331,
              "column": 6
            },
            "end": {
              "line": 333,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "notifyResize",
          "description": "Can be called to manually notify a resizable and its descendant\nresizables of a resize change.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 80,
              "column": 4
            },
            "end": {
              "line": 92,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "assignParentResizable",
          "description": "Used to assign the closest resizable ancestor to this resizable\nif the ancestor detects a request for notifications.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parentResizable"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "stopResizeNotificationsFor",
          "description": "Used to remove a resizable descendant from the list of descendants\nthat should be notified of a resize change.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 113,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "resizerShouldNotify",
          "description": "This method can be overridden to filter nested elements that should or\nshould not be notified by the current element. Return true if an element\nshould be notified, or false if it should not be notified.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 124,
              "column": 4
            },
            "end": {
              "line": 124,
              "column": 59
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element",
              "type": "HTMLElement",
              "description": "A candidate descendant element that\nimplements `IronResizableBehavior`."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the `element` should be notified of resize."
          },
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_onDescendantIronResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_fireResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 140,
              "column": 4
            },
            "end": {
              "line": 145,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_onIronRequestResizeNotifications",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 162,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_parentResizableChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 164,
              "column": 4
            },
            "end": {
              "line": 168,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parentResizable"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_notifyDescendant",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 181,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "descendant"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_requestResizeNotifications",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 211,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "registered",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 323,
              "column": 6
            },
            "end": {
              "line": 325,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "addOwnKeyBinding",
          "description": "Can be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 343,
              "column": 6
            },
            "end": {
              "line": 347,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventString",
              "type": "string"
            },
            {
              "name": "handlerName",
              "type": "string"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "removeOwnKeyBindings",
          "description": "When called, will remove all imperatively-added key bindings.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 352,
              "column": 6
            },
            "end": {
              "line": 356,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "keyboardEventMatchesKeys",
          "description": "Returns true if a keyboard event matches `eventString`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 365,
              "column": 6
            },
            "end": {
              "line": 373,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "KeyboardEvent"
            },
            {
              "name": "eventString",
              "type": "string"
            }
          ],
          "return": {
            "type": "boolean"
          },
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_collectKeyBindings",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 375,
              "column": 6
            },
            "end": {
              "line": 385,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_prepKeyBindings",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 387,
              "column": 6
            },
            "end": {
              "line": 408,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_addKeyBinding",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 410,
              "column": 6
            },
            "end": {
              "line": 420,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventString"
            },
            {
              "name": "handlerName"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_resetKeyEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 422,
              "column": 6
            },
            "end": {
              "line": 428,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_listenKeyEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 430,
              "column": 6
            },
            "end": {
              "line": 442,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_unlistenKeyEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 444,
              "column": 6
            },
            "end": {
              "line": 459,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_onKeyBindingEvent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 461,
              "column": 6
            },
            "end": {
              "line": 482,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "keyBindings"
            },
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_triggerKeyHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 484,
              "column": 6
            },
            "end": {
              "line": 495,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "keyCombo"
            },
            {
              "name": "handlerName"
            },
            {
              "name": "keyboardEvent"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "open",
          "description": "Opens the panel.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 31,
              "column": 6
            },
            "end": {
              "line": 31,
              "column": 44
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "close",
          "description": "Closes the panel. Also called by iron-a11y-keys-behavior when a user presses the \"Esc\" key.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 6
            },
            "end": {
              "line": 33,
              "column": 69
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getContainerClasses",
          "description": "Returns the appropriate classes based on the property values.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 35,
              "column": 7
            },
            "end": {
              "line": 35,
              "column": 415
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "position"
            },
            {
              "name": "background"
            },
            {
              "name": "fixed"
            },
            {
              "name": "persistent"
            },
            {
              "name": "opened"
            },
            {
              "name": "floating"
            },
            {
              "name": "minimizable"
            },
            {
              "name": "fullSize"
            }
          ]
        },
        {
          "name": "_persistentChanged",
          "description": "Sets the `opened` property for persistent panels.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 37,
              "column": 7
            },
            "end": {
              "line": 37,
              "column": 104
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            }
          ]
        },
        {
          "name": "_handleResize",
          "description": "Called when an `iron-resize` event notifies the element that its\nparent container size may have changed.\n\nSize changed events will be collapsed to only trigger a new measurement\nevery 100ms. If the panel is currently hidden, measure events\nwill not be triggered.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 7
            },
            "end": {
              "line": 44,
              "column": 305
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_measureAvailableWidth",
          "description": "Determines whether the panel should be displayed fullSize for responsiveness.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 7
            },
            "end": {
              "line": 46,
              "column": 539
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_isHidden",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 540
            },
            "end": {
              "line": 46,
              "column": 630
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "minimizable"
            },
            {
              "name": "opened"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 0,
          "column": 33
        },
        "end": {
          "line": 46,
          "column": 631
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "key-event-target",
          "description": "Used by iron-a11y-keys-behavior.",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 9
            },
            "end": {
              "line": 29,
              "column": 82
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "stop-keyboard-event-propagation",
          "description": "If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.",
          "sourceRange": {
            "file": "../bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 289,
              "column": 8
            },
            "end": {
              "line": 292,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "position",
          "description": "Where to place the panel - one of `top`, `bottom`, `left`, or `right`.",
          "sourceRange": {
            "start": {
              "line": 4,
              "column": 8
            },
            "end": {
              "line": 4,
              "column": 69
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "opened",
          "description": "Whether the panel is currently open (expanded).",
          "sourceRange": {
            "start": {
              "line": 6,
              "column": 9
            },
            "end": {
              "line": 6,
              "column": 79
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "fixed",
          "description": "If set to true, the panel will have `position:fixed` so it will\nbe attached to the browser window instead of its parent container.",
          "sourceRange": {
            "start": {
              "line": 9,
              "column": 9
            },
            "end": {
              "line": 9,
              "column": 66
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "persistent",
          "description": "If set to true, the panel will be opened and calls to the `close()` method will be ignored.\nMutating the `opened` property will still force a close of the panel.",
          "sourceRange": {
            "start": {
              "line": 12,
              "column": 9
            },
            "end": {
              "line": 12,
              "column": 76
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "background",
          "description": "Whether to display the panel with a `light`, `medium`, or `dark` background.\nThese terms are relative, and can be used in conjunction with px-theme,\npx-dark-theme, or your custom theme or CSS variables to toggle between 3 different\nbackground colors.",
          "sourceRange": {
            "start": {
              "line": 17,
              "column": 9
            },
            "end": {
              "line": 17,
              "column": 47
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "floating",
          "description": "If set to true, the panel will appear with an offset relative to the screen / container edges.\nCan be overridden or customized using the CSS variables.",
          "sourceRange": {
            "start": {
              "line": 20,
              "column": 9
            },
            "end": {
              "line": 20,
              "column": 44
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "minimizable",
          "description": "If set to true, the panel will not fully collapse when closed. It will appear in a minimized state.\nYou can use the content slot `minimized` to determine what will appear inside the panel while minimized\n(likely an icon or button for fully opening the panel).",
          "sourceRange": {
            "start": {
              "line": 24,
              "column": 9
            },
            "end": {
              "line": 24,
              "column": 47
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "opened-changed",
          "description": "Fired when the `opened` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "content",
          "range": {
            "file": "px-panel.html",
            "start": {
              "line": 70,
              "column": 8
            },
            "end": {
              "line": 70,
              "column": 36
            }
          }
        },
        {
          "description": "",
          "name": "minimized",
          "range": {
            "file": "px-panel.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 73,
              "column": 38
            }
          }
        }
      ],
      "tagname": "px-panel"
    }
  ]
}
