{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "Creates a wrapper around an HTML element that users can tap to show\na `<px-modal>`. Pass any content into the `<px-modal-trigger>` tag and data-bind\nthe element's `trigger` property to the modal's `openTrigger` property.\n\n### Usage\n\n    <px-modal open-trigger=\"[[openTrigger]]\"></px-modal>\n    <px-modal-trigger trigger=\"{{openTrigger}}\">\n      <button>Open Modal</button>\n    </px-modal-trigger>",
      "summary": "",
      "path": "px-modal-trigger.html",
      "properties": [
        {
          "name": "trigger",
          "type": "HTMLElement",
          "description": "Reference to the HTML element wrapping around the user-tappable\ncontent. Makes it easy to data-bind a tappable element to the\npx-modal `openTrigger` property.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 39,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 4
            },
            "end": {
              "line": 44,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 27,
          "column": 10
        },
        "end": {
          "line": 45,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "trigger",
          "description": "Reference to the HTML element wrapping around the user-tappable\ncontent. Makes it easy to data-bind a tappable element to the\npx-modal `openTrigger` property.",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 39,
              "column": 7
            }
          },
          "metadata": {},
          "type": "HTMLElement"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "trigger-changed",
          "description": "Fired when the `trigger` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "",
          "range": {
            "file": "px-modal-trigger.html",
            "start": {
              "line": 22,
              "column": 4
            },
            "end": {
              "line": 22,
              "column": 17
            }
          }
        }
      ],
      "tagname": "px-modal-trigger"
    },
    {
      "description": "Modals open over the page content and prompt the user to take some actions before\nthey continue using the app. Modals can be used to confirm the user wants to\ncomplete a destructive action, to prompt a specific input needed before moving\nforward, or to inform the user of some important information.\n\n### Basic usage\n\nTo create a basic modal, pass some text in for the user to read and provide strings\nfor the accept and reject trigger buttons. Open the modal by setting the `opened`\nproperty to `true`:\n\n    <px-modal\n        header-text=\"Confirm delete\"\n        body-text=\"Do you want to delete this record? The record will be deleted permanently.\"\n        accept-text=\"Permanently Delete Record\"\n        reject-text=\"Cancel\"\n        opened>\n    </px-modal>\n\nUse the `<px-modal-trigger>` element to create a target the user can tap to open\nthe modal. Data-bind the wrapper's `trigger` property to the modal's `openTrigger`\nproperty to connect the two:\n\n    <px-modal-trigger trigger=\"{{trigger}}\">\n      <button>Open the modal</button>\n    </px-modal-trigger>\n    <px-modal open-trigger=\"[[trigger]]\" header-text=\"...\" body-text=\"...\" accept-text=\"...\" reject-text=\"...\">\n    </px-modal>\n\n### Custom content\n\nThe app can pass in custom content to display for the modal header, body,\nand accept and reject trigger sections. Use the `header`, `body`, `actions`,\n`accept-trigger`, and `reject-trigger` slots to define custom content:\n\n    <px-modal opened>\n      <div slot=\"header\">Confirm delete</div>\n      <div slot=\"body\">\n        <p>Do you want to delete this record? The record will be deleted permanently.</p>\n      </div>\n      <div style=\"width:100%\" slot=\"actions\">\n        <button>Custom action</button>\n      </div>\n      <button slot=\"reject-trigger\">Cancel</button>\n      <button slot=\"accept-trigger\">Permanently Delete Record</button>\n    </px-modal>\n\nWhen the user taps on elements passed into the trigger slots the modal will\nautomatically hide itself and fire relevant events.\n\n### Application modal\n\nAs opposed to the modal dialog use case above, your application may need to provide a larger, more interactive\nmodal - the user is still focused on completing a task outside of the regular application flow, but may need more\nspace. An example would be drilling down from a table into a detail view for a specific row in that table,\ntaking some action to disposition the row, and returning the user to the main view. In this case, use the `fill-container`\nand `fit-into` properties to specify what portion of the screen should be taken up by the modal\n(usually the main content frame of your application):\n\n    <px-modal id=\"myModal\" header-text=\"Detail view\" fill-container>\n      <div slot=\"body\">\n        // Content here\n      </div>\n    </px-modal>\n\n    <script>\n      var modal = document.getElementById('myModal');\n      var frame = document.getElementById('myApplicationFrame');\n      modal.set('fitInto', frame);\n    </script>\n\n\n### Responding to accept and reject triggers\n\nThe user can accept or reject a modal prompt. Apps may want to respond differently\ndepending on what the user selects. For example, if the user accepts a delete\nconfirmation modal the app should delete the record, and if the user rejects the\nmodal the apps should cancel the deletion. Listen for the `px-modal-rejected`\nand `px-modal-accepted` events to respond to user actions:\n\n    <px-modal\n        id=\"confirmModal\"\n        header-text=\"Confirm delete\"\n        body-text=\"Do you want to delete this record? The record will be deleted permanently.\"\n        accept-text=\"Permanently Delete Record\"\n        reject-text=\"Cancel\"\n        opened>\n    </px-modal>\n    <script>\n      var modal = document.getElementById('confirmModal');\n      modal.addEventListener('px-modal-rejected', function(e) {\n        // ... handle reject action here ...\n      });\n      modal.addEventListener('px-modal-accepted', function(e) {\n        // ... handle accept action here ...\n      });\n    </script>\n\nBy default, the modal is dismissed when the user presses the escape key. Listen\nfor the `px-modal-dismissed` event to respond to this action. Set the\n`disableCloseOnEscape` property to `true` to keep the modal open when the\nuser presses the escape key.\n\n### Styling\n\nThe following custom properties are available for styling:\n\nCustom property | Description\n:------------|:-------------\n`--px-modal-background-color`            | Background color of the modal dialog\n`--px-modal-background-color--container` | Background color of the modal dialog when fill-container is true\n`--px-modal-overlay-color`               | Color of the overlay that covers the screen behind the modal dialog\n`--px-modal-text-color`                  | Text color for content set with properties (slotted content will not use this color)\n`--px-modal-text-color--container`       | Text color for content set with properties when fill-container is true",
      "summary": "",
      "path": "px-modal.html",
      "properties": [
        {
          "name": "sizingTarget",
          "type": "!Element",
          "description": "The element that will receive a `max-height`/`width`. By default it is the same as `this`,\nbut it can be set to a child element. This is useful, for example, for implementing a\nscrolling region inside the element.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "fitInto",
          "type": "Object",
          "description": "The element to fit `this` into.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 82,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "noOverlap",
          "type": "boolean",
          "description": "Will position the element around the positionTarget without overlapping it.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "positionTarget",
          "type": "!Element",
          "description": "The element that should be used to position the element. If not set, it will\ndefault to the parent node.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "horizontalAlign",
          "type": "string",
          "description": "The orientation against which to align the element horizontally\nrelative to the `positionTarget`. Possible values are \"left\", \"right\", \"center\", \"auto\".",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "verticalAlign",
          "type": "string",
          "description": "The orientation against which to align the element vertically\nrelative to the `positionTarget`. Possible values are \"top\", \"bottom\", \"middle\", \"auto\".",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 112,
              "column": 6
            },
            "end": {
              "line": 114,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "dynamicAlign",
          "type": "boolean",
          "description": "If true, it will use `horizontalAlign` and `verticalAlign` values as preferred alignment\nand if there's not enough space, it will pick the values which minimize the cropping.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 120,
              "column": 6
            },
            "end": {
              "line": 122,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "horizontalOffset",
          "type": "number",
          "description": "A pixel value that will be added to the position calculated for the\ngiven `horizontalAlign`, in the direction of alignment. You can think\nof it as increasing or decreasing the distance to the side of the\nscreen given by `horizontalAlign`.\n\nIf `horizontalAlign` is \"left\" or \"center\", this offset will increase or\ndecrease the distance to the left side of the screen: a negative offset will\nmove the dropdown to the left; a positive one, to the right.\n\nConversely if `horizontalAlign` is \"right\", this offset will increase\nor decrease the distance to the right side of the screen: a negative\noffset will move the dropdown to the right; a positive one, to the left.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "verticalOffset",
          "type": "number",
          "description": "A pixel value that will be added to the position calculated for the\ngiven `verticalAlign`, in the direction of alignment. You can think\nof it as increasing or decreasing the distance to the side of the\nscreen given by `verticalAlign`.\n\nIf `verticalAlign` is \"top\" or \"middle\", this offset will increase or\ndecrease the distance to the top side of the screen: a negative offset will\nmove the dropdown upwards; a positive one, downwards.\n\nConversely if `verticalAlign` is \"bottom\", this offset will increase\nor decrease the distance to the bottom side of the screen: a negative\noffset will move the dropdown downwards; a positive one, upwards.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 158,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "autoFitOnAttach",
          "type": "boolean",
          "description": "Used by iron-fit-behavior to attach the modal to the Window by default.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 8
            },
            "end": {
              "line": 254,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "_fitInfo",
          "type": "?Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 173,
              "column": 6
            },
            "end": {
              "line": 175,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "headerText",
          "type": "string",
          "description": "String displayed in the modal header. Override with custom HTML using\nthe `header` slot.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 8
            },
            "end": {
              "line": 180,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "bodyText",
          "type": "string",
          "description": "String displayed in the modal body. Override with custom HTML using\nthe `body` slot.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 8
            },
            "end": {
              "line": 186,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "acceptText",
          "type": "string",
          "description": "String used for the accept button. Override with a custom button using\nthe `accept-trigger` slot.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 8
            },
            "end": {
              "line": 192,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "rejectText",
          "type": "string",
          "description": "String used for the reject button. Override with a custom button using\nthe `reject-trigger` slot.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 8
            },
            "end": {
              "line": 198,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "opened",
          "type": "boolean",
          "description": "Set this flag to show the modal, remove it to hide the modal.\nAutomatically updated when the user taps a trigger that opens or\ncloses the modal.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 8
            },
            "end": {
              "line": 211,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_handleOpenedChanged\""
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "openTrigger",
          "type": "HTMLElement",
          "description": "Set to an HTMLElement reference using JavaScript. When the element\nis clicked or tapped, the modal will be opened. To create your own\nmechanism for opening the modal use the `opened` property and\ndo not set an `openTrigger`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 8
            },
            "end": {
              "line": 222,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_handleOpenTriggerUpdated\""
            }
          }
        },
        {
          "name": "disableCloseOnEscape",
          "type": "boolean",
          "description": "By default the user can press escape to dismiss the modal. Set this\nproperty to `true` to disable that functionality if you want to\nforce the user to interact with the accept/reject buttons to\ndismiss the modal.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "fillContainer",
          "type": "boolean",
          "description": "By default, the modal will fit itself into the Window for use with\nmodal dialogs. Set this property to create a modal that fills another\ncontainer instead, for instance the main content area of your app.\nYou can specify which container using the `fitInto` property.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 8
            },
            "end": {
              "line": 246,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_handleFillContainerChanged\""
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "_fitWidth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 178,
              "column": 4
            },
            "end": {
              "line": 186,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_fitHeight",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 188,
              "column": 4
            },
            "end": {
              "line": 196,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_fitLeft",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 198,
              "column": 4
            },
            "end": {
              "line": 206,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_fitTop",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 208,
              "column": 4
            },
            "end": {
              "line": 216,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_defaultPositionTarget",
          "description": "The element that should be used to position the element,\nif no position target is configured.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 222,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_localeHorizontalAlign",
          "description": "The horizontal align value, accounting for the RTL/LTR text direction.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 235,
              "column": 4
            },
            "end": {
              "line": 246,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "__shouldPosition",
          "description": "True if the element should be positioned instead of centered.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 252,
              "column": 4
            },
            "end": {
              "line": 255,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 257,
              "column": 4
            },
            "end": {
              "line": 277,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 279,
              "column": 4
            },
            "end": {
              "line": 284,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "fit",
          "description": "Positions and fits the element into the `fitInto` element.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 289,
              "column": 4
            },
            "end": {
              "line": 293,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_discoverInfo",
          "description": "Memoize information needed to position and size the target element.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 299,
              "column": 4
            },
            "end": {
              "line": 336,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "resetFit",
          "description": "Resets the target element's position and size constraints, and clear\nthe memoized data.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 352,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "refit",
          "description": "Equivalent to calling `resetFit()` and `fit()`. Useful to call this after\nthe element or the `fitInto` element has been resized, or if any of the\npositioning properties (e.g. `horizontalAlign, verticalAlign`) is updated.\nIt preserves the scroll position of the sizingTarget.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 360,
              "column": 4
            },
            "end": {
              "line": 367,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "position",
          "description": "Positions the element according to `horizontalAlign, verticalAlign`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 372,
              "column": 4
            },
            "end": {
              "line": 422,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "constrain",
          "description": "Constrains the size of the element to `fitInto` by setting `max-height`\nand/or `max-width`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 428,
              "column": 4
            },
            "end": {
              "line": 455,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "_sizeDimension",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 461,
              "column": 4
            },
            "end": {
              "line": 463,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rect"
            },
            {
              "name": "positionedBy"
            },
            {
              "name": "start"
            },
            {
              "name": "end"
            },
            {
              "name": "extent"
            }
          ],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "__sizeDimension",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 468,
              "column": 4
            },
            "end": {
              "line": 478,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rect"
            },
            {
              "name": "positionedBy"
            },
            {
              "name": "start"
            },
            {
              "name": "end"
            },
            {
              "name": "extent"
            }
          ],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "center",
          "description": "Centers horizontally and vertically if not already positioned. This also sets\n`position:fixed`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 484,
              "column": 4
            },
            "end": {
              "line": 517,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "__getNormalizedRect",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 519,
              "column": 4
            },
            "end": {
              "line": 531,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target"
            }
          ],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "__getOffscreenArea",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 533,
              "column": 4
            },
            "end": {
              "line": 537,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "position"
            },
            {
              "name": "size"
            },
            {
              "name": "fitRect"
            }
          ],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "__getPosition",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 540,
              "column": 4
            },
            "end": {
              "line": 659,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hAlign"
            },
            {
              "name": "vAlign"
            },
            {
              "name": "size"
            },
            {
              "name": "sizeNoMargins"
            },
            {
              "name": "positionRect"
            },
            {
              "name": "fitRect"
            }
          ],
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "created",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 261,
              "column": 6
            },
            "end": {
              "line": 271,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_handleOpenedChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 273,
              "column": 6
            },
            "end": {
              "line": 291,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opened"
            }
          ]
        },
        {
          "name": "_getFocusableElements",
          "description": "Searches for focusable elements passed in via slots or created in this\ncomponent's shadow DOM template. Returns an array of focusable\nelements.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 6
            },
            "end": {
              "line": 315,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Array.<HTMLElement>"
          }
        },
        {
          "name": "_handleModalKeypress",
          "description": "Intercepts keyboard events when the modal is opened and traps user\nfocus on tab. Closes the modal when the user hits escape.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 321,
              "column": 6
            },
            "end": {
              "line": 348,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_handleTransitionEnd",
          "description": "After the modal animates into visibility focus the first focusable element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 360,
              "column": 6
            },
            "end": {
              "line": 369,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_handleOpenTriggerUpdated",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 371,
              "column": 6
            },
            "end": {
              "line": 380,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newTrigger"
            },
            {
              "name": "oldTrigger"
            }
          ]
        },
        {
          "name": "_handleRejectTriggerTapped",
          "description": "Fired when the reject trigger is tapped (after the modal is closed).",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 385,
              "column": 6
            },
            "end": {
              "line": 388,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_handleAcceptTriggerTapped",
          "description": "Fired when the accept trigger is tapped (after the modal is closed).",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 393,
              "column": 6
            },
            "end": {
              "line": 396,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_handleFillContainerChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 397,
              "column": 6
            },
            "end": {
              "line": 406,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            }
          ]
        },
        {
          "name": "_refit",
          "description": "Handles refitting modals that are supposed to fill a container\nwhen the screen is scrolled and the container presumably moves.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 411,
              "column": 7
            },
            "end": {
              "line": 417,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 170,
          "column": 12
        },
        "end": {
          "line": 418,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "sizing-target",
          "description": "The element that will receive a `max-height`/`width`. By default it is the same as `this`,\nbut it can be set to a child element. This is useful, for example, for implementing a\nscrolling region inside the element.",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 7
            }
          },
          "metadata": {},
          "type": "!Element",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "fit-into",
          "description": "The element to fit `this` into.",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 82,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "no-overlap",
          "description": "Will position the element around the positionTarget without overlapping it.",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "position-target",
          "description": "The element that should be used to position the element. If not set, it will\ndefault to the parent node.",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 7
            }
          },
          "metadata": {},
          "type": "!Element",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the element horizontally\nrelative to the `positionTarget`. Possible values are \"left\", \"right\", \"center\", \"auto\".",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 104,
              "column": 6
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the element vertically\nrelative to the `positionTarget`. Possible values are \"top\", \"bottom\", \"middle\", \"auto\".",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 112,
              "column": 6
            },
            "end": {
              "line": 114,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "dynamic-align",
          "description": "If true, it will use `horizontalAlign` and `verticalAlign` values as preferred alignment\nand if there's not enough space, it will pick the values which minimize the cropping.",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 120,
              "column": 6
            },
            "end": {
              "line": 122,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "horizontal-offset",
          "description": "A pixel value that will be added to the position calculated for the\ngiven `horizontalAlign`, in the direction of alignment. You can think\nof it as increasing or decreasing the distance to the side of the\nscreen given by `horizontalAlign`.\n\nIf `horizontalAlign` is \"left\" or \"center\", this offset will increase or\ndecrease the distance to the left side of the screen: a negative offset will\nmove the dropdown to the left; a positive one, to the right.\n\nConversely if `horizontalAlign` is \"right\", this offset will increase\nor decrease the distance to the right side of the screen: a negative\noffset will move the dropdown to the right; a positive one, to the left.",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "vertical-offset",
          "description": "A pixel value that will be added to the position calculated for the\ngiven `verticalAlign`, in the direction of alignment. You can think\nof it as increasing or decreasing the distance to the side of the\nscreen given by `verticalAlign`.\n\nIf `verticalAlign` is \"top\" or \"middle\", this offset will increase or\ndecrease the distance to the top side of the screen: a negative offset will\nmove the dropdown upwards; a positive one, downwards.\n\nConversely if `verticalAlign` is \"bottom\", this offset will increase\nor decrease the distance to the bottom side of the screen: a negative\noffset will move the dropdown downwards; a positive one, upwards.",
          "sourceRange": {
            "file": "bower_components/iron-fit-behavior/iron-fit-behavior.html",
            "start": {
              "line": 158,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "name": "auto-fit-on-attach",
          "description": "Used by iron-fit-behavior to attach the modal to the Window by default.",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 8
            },
            "end": {
              "line": 254,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "header-text",
          "description": "String displayed in the modal header. Override with custom HTML using\nthe `header` slot.",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 8
            },
            "end": {
              "line": 180,
              "column": 26
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "body-text",
          "description": "String displayed in the modal body. Override with custom HTML using\nthe `body` slot.",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 8
            },
            "end": {
              "line": 186,
              "column": 24
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "accept-text",
          "description": "String used for the accept button. Override with a custom button using\nthe `accept-trigger` slot.",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 8
            },
            "end": {
              "line": 192,
              "column": 26
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "reject-text",
          "description": "String used for the reject button. Override with a custom button using\nthe `reject-trigger` slot.",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 8
            },
            "end": {
              "line": 198,
              "column": 26
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "opened",
          "description": "Set this flag to show the modal, remove it to hide the modal.\nAutomatically updated when the user taps a trigger that opens or\ncloses the modal.",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 8
            },
            "end": {
              "line": 211,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "open-trigger",
          "description": "Set to an HTMLElement reference using JavaScript. When the element\nis clicked or tapped, the modal will be opened. To create your own\nmechanism for opening the modal use the `opened` property and\ndo not set an `openTrigger`.",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 8
            },
            "end": {
              "line": 222,
              "column": 9
            }
          },
          "metadata": {},
          "type": "HTMLElement"
        },
        {
          "name": "disable-close-on-escape",
          "description": "By default the user can press escape to dismiss the modal. Set this\nproperty to `true` to disable that functionality if you want to\nforce the user to interact with the accept/reject buttons to\ndismiss the modal.",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "fill-container",
          "description": "By default, the modal will fit itself into the Window for use with\nmodal dialogs. Set this property to create a modal that fills another\ncontainer instead, for instance the main content area of your app.\nYou can specify which container using the `fitInto` property.",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 8
            },
            "end": {
              "line": 246,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "horizontal-offset-changed",
          "description": "Fired when the `horizontalOffset` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "vertical-offset-changed",
          "description": "Fired when the `verticalOffset` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronFitBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "px-modal-accepted",
          "description": "px-modal-accepted",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "px-modal-dismissed",
          "description": "px-modal-dismissed",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "px-modal-rejected",
          "description": "px-modal-rejected",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "opened-changed",
          "description": "Fired when the `opened` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "header",
          "range": {
            "file": "px-modal.html",
            "start": {
              "line": 135,
              "column": 12
            },
            "end": {
              "line": 137,
              "column": 19
            }
          }
        },
        {
          "description": "",
          "name": "body",
          "range": {
            "file": "px-modal.html",
            "start": {
              "line": 141,
              "column": 12
            },
            "end": {
              "line": 143,
              "column": 19
            }
          }
        },
        {
          "description": "",
          "name": "actions",
          "range": {
            "file": "px-modal.html",
            "start": {
              "line": 149,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 38
            }
          }
        },
        {
          "description": "",
          "name": "reject-trigger",
          "range": {
            "file": "px-modal.html",
            "start": {
              "line": 152,
              "column": 12
            },
            "end": {
              "line": 154,
              "column": 19
            }
          }
        },
        {
          "description": "",
          "name": "accept-trigger",
          "range": {
            "file": "px-modal.html",
            "start": {
              "line": 158,
              "column": 12
            },
            "end": {
              "line": 160,
              "column": 19
            }
          }
        }
      ],
      "tagname": "px-modal"
    }
  ]
}
