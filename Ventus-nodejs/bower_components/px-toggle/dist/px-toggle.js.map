{"version":3,"sources":["px-toggle.es6.js"],"names":["Polymer","is","behaviors","IronCheckedElementBehavior","properties","size","type","String","value","disabled","Boolean","reflectToAttribute","listeners","attached","setAttribute","_checkDisabledState","_checkLabelSize","_checkInputSize","_onCheckTap","evt","debounce","checked","fire"],"mappings":"aAAA,CAAC,UAAW,CACV,aAEEA,QAAQ,CACNC,GAAI,WADE,CAENC,UAAY,CAACF,QAAQG,0BAAT,CAFN,CAINC,WAAY,CAORC,KAAM,CACJC,KAAMC,MADF,CAEJC,MAAO,EAFH,CAPE,CAiBRC,SAAU,CACRH,KAAMI,OADE,CAERF,MAAO,KAFC,CAGRG,mBAAoB,IAHZ,CAjBF,CAJN,CA2BNC,UAAY,CACV,MAAO,aADG,CA3BN,CA+BNC,QA/BM,oBA+BK,CACT,KAAKC,YAAL,CAAkB,MAAlB,CAAyB,QAAzB,CACD,CAjCK,CAmCNC,mBAnCM,8BAmCcN,QAnCd,CAmCuB,CAC3B,KAAKK,YAAL,CAAkB,eAAlB,CAAkCL,QAAlC,EACA,UAAWA,SAAW,kBAAX,CAAgC,EAA3C,CACD,CAtCK,CAwCNO,eAxCM,0BAwCUX,IAxCV,CAwCe,CACnB,wBAAyBA,IAC1B,CA1CK,CA4CNY,eA5CM,0BA4CUZ,IA5CV,CA4Ce,CACnB,wBAAyBA,IAC1B,CA9CK,CAuDNa,WAvDM,sBAuDMC,GAvDN,CAuDW,CACf,GAAG,CAAC,KAAKV,QAAT,CAAmB,CACjB,KAAKW,QAAL,CAAc,cAAd,CAA8B,UAAW,CACvC,KAAKC,OAAL,CAAe,CAAC,KAAKA,OAArB,CACA,KAAKC,IAAL,CAAU,2BAAV,CAAuC,KAAKD,OAA5C,CACD,CAHD,CAGE,EAHF,CAID,CACF,CA9DK,CAAR,CAgED,CAnEH","file":"px-toggle.js","sourcesContent":["(function() {\n  'use strict';\n\n    Polymer({\n      is: 'px-toggle',\n      behaviors : [Polymer.IronCheckedElementBehavior],\n      /* Properties for this component */\n      properties: {\n\n          /**\n           * The size of the toggle element. Can be one of\n           * small, regular (default), large & huge.\n           * @type {String}\n           */\n          size: {\n            type: String,\n            value: \"\"\n          },\n\n          /**\n           * The disabled state attribute for the component.\n           * @type {Boolean}\n           * @default false\n           */\n          disabled: {\n            type: Boolean,\n            value: false,\n            reflectToAttribute: true\n          }\n      },\n      listeners : {\n        'tap': '_onCheckTap'\n      },\n\n      attached() {\n        this.setAttribute('role','switch');\n      },\n\n      _checkDisabledState(disabled){\n        this.setAttribute('aria-disabled',disabled);\n        return `${(disabled ? 'toggle--disabled' : '')}`;\n      },\n\n      _checkLabelSize(size){\n        return `toggle__label--${size}`;\n      },\n\n      _checkInputSize(size){\n        return `toggle__input--${size}`;\n      },\n\n      /**\n       * Event fired when the user changes the status of the toggle.\n       * `event.detail` will contain the new checked status (true or false)\n       *\n       * @event px-toggle-check-changed\n       */\n\n      _onCheckTap(evt) {\n        if(!this.disabled) {\n          this.debounce('checkChanged', function() {\n            this.checked = !this.checked;\n            this.fire('px-toggle-checked-changed', this.checked);\n          },50);\n        }\n      }\n    });\n  }\n)();\n"]}