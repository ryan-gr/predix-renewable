{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "Use the px-simple-line-chart component to visualize a series of numeric values as a line chart. The series is represented by a line connecting a sequence of points, the position of each proportionally point representing a single coordinate value.\n\nOptionally, a `threshold` value may be defined to draw a line horizontally at the y-axis point representing the value. By default a threshold label will be drawn in an axis bar on the left side of the chart. If a custom threshold label is necessary a string may also be passed to the component as `threshold-label`.\n\nIn addition, a `min` and `max` may be configured in order to scope the chart to a specific range of y values. By default these will also be represented by labels in an axis bar on the left side of the chart. If custom labels are necessary they can be passed as strings to the component as `min-label` and `max-label`.\n\nThe `width` and `height` of the component are also configurable as well as the vertical columns and horizontal rows drawn in the background of the coordinate space.\n\nSimple-charts rely on D3 version 3.\n\n### Usage\n\n    <px-simple-line-chart line-data=\"[ [1,2], [2,3], [3,4] ]\"></px-simple-line-chart>\n\n### Styling\n\nThe following custom properties are available for styling:\n\nCustom property | Description\n:----------------|:-------------\n`--px-simple-line-chart-background-color` | The background color for the entire chart\n`--px-simple-line-chart-border-color` | The top and bottom border color\n`--px-simple-line-chart-grid-color` | The background grid color\n`--px-simple-line-chart-bottom-color` | The bottom divider color\n`--px-simple-line-chart-axis-bar-color` | The axis background color\n`--px-simple-line-chart-axis-label-color` | The axis text label color\n`--px-simple-line-chart-axis-label-font-weight` | The axis text font weight\n`--px-simple-line-chart-line-color` | The data line color\n`--px-simple-line-chart-threshold-line-color` | The data comparison threshold color",
      "summary": "",
      "path": "px-simple-line-chart.html",
      "properties": [
        {
          "name": "_defaultWidth",
          "type": "string",
          "description": "Sets the default width of the component in pixels.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 39,
              "column": 6
            },
            "end": {
              "line": 42,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"283\"",
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "_defaultHeight",
          "type": "string",
          "description": "Sets the default height of the component in pixels.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 46,
              "column": 6
            },
            "end": {
              "line": 49,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"150\"",
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "_minimumWidth",
          "type": "string",
          "description": "Sets the minimum width of the component in pixels.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 53,
              "column": 6
            },
            "end": {
              "line": 56,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"100\"",
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "_minimumHeight",
          "type": "string",
          "description": "Sets the minimum height of the component in pixels.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"50\"",
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "width",
          "type": "string",
          "description": "Sets the width of the component in pixels.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 71,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_drawChart\""
            }
          },
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "height",
          "type": "string",
          "description": "Sets the height of the component in pixels.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 76,
              "column": 6
            },
            "end": {
              "line": 80,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_drawChart\""
            }
          },
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "lineData",
          "type": "Array",
          "description": "This property defines the series data to be charted. It needs to be passed in as a multi-dimensional array containing one or more arrays of numeric value pairs.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 6
            },
            "end": {
              "line": 68,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_drawChart\""
            }
          },
          "defaultValue": "[[1,2],[2,3],[3,4]]"
        },
        {
          "name": "threshold",
          "type": "string",
          "description": "Define a threshold value to draw a thin line across the chart at the y-axis position representing the threshold point.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 76,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "null"
        },
        {
          "name": "thresholdLabel",
          "type": "string",
          "description": "Define custom text for your threshold label. Pass in the value as a string. Set the value to 'false' to remove the threshold label.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 6
            },
            "end": {
              "line": 84,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "max",
          "type": "string",
          "description": "Define an upper bound for your data.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 6
            },
            "end": {
              "line": 92,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "null"
        },
        {
          "name": "min",
          "type": "string",
          "description": "Define a lower bound for your data.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 6
            },
            "end": {
              "line": 100,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "null"
        },
        {
          "name": "maxLabel",
          "type": "string",
          "description": "Define custom text for a chart's max label.\nThe values of your max will be used by default to render text labels to the axis bar on the left side of the chart.\nSet the value to 'false' to remove the label from the axis bar.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 6
            },
            "end": {
              "line": 110,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "minLabel",
          "type": "string",
          "description": "Define custom text for a chart's min label.\nThe values of your min will be used by default to render text labels to the axis bar on the left side of the chart.\nSet the value to 'false' to remove the labels from the axis bar.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 6
            },
            "end": {
              "line": 120,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "columns",
          "type": "number",
          "description": "The number of vertical grid lines to be drawn in the background of the chart.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 6
            },
            "end": {
              "line": 129,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_drawChart\""
            }
          },
          "defaultValue": "7"
        },
        {
          "name": "rows",
          "type": "number",
          "description": "The number of horizontal grid lines to be drawn in the background of the chart.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 6
            },
            "end": {
              "line": 138,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_drawChart\""
            }
          },
          "defaultValue": "7"
        },
        {
          "name": "padding",
          "type": "string",
          "description": "The padding in the chart.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 6
            },
            "end": {
              "line": 146,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "maxDataPoints",
          "type": "number",
          "description": "The max data points in the chart.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 6
            },
            "end": {
              "line": 154,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "25"
        }
      ],
      "methods": [
        {
          "name": "attached",
          "description": "Polymer fires this event automatically, we use it to define\nthis.svg and initiate the component",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 89,
              "column": 4
            },
            "end": {
              "line": 92,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "_drawChart",
          "description": "Removes previous chart, draws new chart. Debounced.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 97,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "_removeChart",
          "description": "Removes previous chart contents. Debounced.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 110,
              "column": 4
            },
            "end": {
              "line": 115,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "_removeChartDebounced",
          "description": "Resizes the SVG element and clears any internal\ncontents. This is necessary between redrawing the chart.\nDepends on this.svg being a D3 selection of the chart's SVG element.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 122,
              "column": 4
            },
            "end": {
              "line": 127,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "_addStyleScope",
          "description": "Adds the style-scope class of the component to all SVG\nchild nodes. This is necessary because Polymer, while applying the class\nto child HTML elements, does not apply the class to child SVG elements",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 135,
              "column": 4
            },
            "end": {
              "line": 142,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "_addStyleScopeToElement",
          "description": "Pass in a d3 selection and this function will ensure that\nPolymer style-scope is applied.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "el"
            }
          ],
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "_clearSVG",
          "description": "Selects the SVG of the chart, shrinks it to 1px by 1px and\nempties it of child elements. This is necessary to do before drawing or\nredrawing the chart.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 155,
              "column": 4
            },
            "end": {
              "line": 161,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "_getSeriesTotal",
          "description": "Returns the sum of the values of a series.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 166,
              "column": 4
            },
            "end": {
              "line": 170,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "series"
            }
          ],
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "_getLongestSeries",
          "description": "Returns the longest series based on the array of series passed.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 175,
              "column": 4
            },
            "end": {
              "line": 183,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "seriesArray"
            }
          ],
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "_calculateTextSize",
          "description": "Method returns the size of an SVG text element and\nits position relative to the viewport.\n\nThe essential DOM function is getBoundingClientRect():\nhttps://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n\nReturns a rect object with the following properties:\n\n   height - float - Height of the rectangle box (This is identical to bottom minus top). Read only.\n   width - float - Width of the rectangle box (This is identical to right minus left). Read only.\n   top - float - Y-coordinate, relative to the viewport origin, of the top of the rectangle box. Read only.\n   left - float - X-coordinate, relative to the viewport origin, of the left of the rectangle box. Read only.\n   bottom - float - Y-coordinate, relative to the viewport origin, of the bottom of the rectangle box. Read only.\n   right - float - X-coordinate, relative to the viewport origin, of the right of the rectangle box. Read only.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 201,
              "column": 4
            },
            "end": {
              "line": 220,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text"
            },
            {
              "name": "className"
            }
          ],
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "_calculateTextHeight",
          "description": "Returns height of SVG text element.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 225,
              "column": 4
            },
            "end": {
              "line": 235,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text"
            },
            {
              "name": "className"
            }
          ],
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "_calculateTextWidth",
          "description": "Returns width of SVG text element.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 240,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text"
            },
            {
              "name": "className"
            }
          ],
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "_reconcileValue",
          "description": "Reconcile the incoming value on an element's attribute\nThis is necessary because some values may come in as one type but\nneed to be interpreted as another type.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 257,
              "column": 4
            },
            "end": {
              "line": 280,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "defaultValue"
            }
          ],
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "_ensureMinimum",
          "description": "Ensures that a Number is equal to or greater than a min.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 285,
              "column": 4
            },
            "end": {
              "line": 287,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "min"
            }
          ],
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "_reconcileWidth",
          "description": "Reconciles the value assigned to width.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 292,
              "column": 4
            },
            "end": {
              "line": 298,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "_reconcileHeight",
          "description": "Reconciles the value assigned to height.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 303,
              "column": 4
            },
            "end": {
              "line": 310,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "_reconcileDimensionValue",
          "description": "Reconciles the value assigned to height or width.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 315,
              "column": 4
            },
            "end": {
              "line": 318,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "defaultValue"
            },
            {
              "name": "type"
            }
          ],
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "_getAutoValue",
          "description": "Returns the 'automatic' value for height or width based on\nparent node dimensions.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 324,
              "column": 4
            },
            "end": {
              "line": 332,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ],
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "_getElementPadding",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 334,
              "column": 4
            },
            "end": {
              "line": 342,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "el"
            }
          ]
        },
        {
          "name": "_setDimensions",
          "description": "Sets the dimensions of the component's `this.widthValue`\nand `this.heightValue`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 351,
              "column": 4
            },
            "end": {
              "line": 362,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "addPoint",
          "description": "Adds a point to the chart.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 4
            },
            "end": {
              "line": 166,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "point"
            }
          ]
        },
        {
          "name": "_drawChartDebounced",
          "description": "The main function of this component which\ncalls all of the subordinate functions to draw/redraw the chart.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 4
            },
            "end": {
              "line": 194,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_reconcileValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 4
            },
            "end": {
              "line": 233,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_reconcileMinOrMax",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 4
            },
            "end": {
              "line": 262,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_reconcileThreshold",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 264,
              "column": 4
            },
            "end": {
              "line": 270,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_setSizes",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 4
            },
            "end": {
              "line": 295,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_extentWithPadding",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 297,
              "column": 4
            },
            "end": {
              "line": 310,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data"
            }
          ]
        },
        {
          "name": "_drawChartLine",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 312,
              "column": 4
            },
            "end": {
              "line": 317,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_setScales",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 4
            },
            "end": {
              "line": 328,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_typeofToString",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 330,
              "column": 4
            },
            "end": {
              "line": 332,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            }
          ]
        },
        {
          "name": "_addAxisBar",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 344,
              "column": 4
            },
            "end": {
              "line": 351,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_drawAxisLabels",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 353,
              "column": 4
            },
            "end": {
              "line": 378,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getAxisLabelWidth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 380,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_setLinearLineFunction",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 399,
              "column": 4
            },
            "end": {
              "line": 408,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_setChartLineFunction",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 410,
              "column": 4
            },
            "end": {
              "line": 419,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_addChartBorders",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 421,
              "column": 4
            },
            "end": {
              "line": 450,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_addGridLines",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 452,
              "column": 4
            },
            "end": {
              "line": 489,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_drawThresholdLine",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 491,
              "column": 4
            },
            "end": {
              "line": 505,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 51,
          "column": 10
        },
        "end": {
          "line": 506,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "width",
          "description": "Sets the width of the component in pixels.",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 71,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "height",
          "description": "Sets the height of the component in pixels.",
          "sourceRange": {
            "file": "bower_components/px-simple-chart-common-behavior/px-simple-chart-common-behavior.html",
            "start": {
              "line": 76,
              "column": 6
            },
            "end": {
              "line": 80,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "PxSimpleChartCommonBehavior.common"
        },
        {
          "name": "line-data",
          "description": "This property defines the series data to be charted. It needs to be passed in as a multi-dimensional array containing one or more arrays of numeric value pairs.",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 6
            },
            "end": {
              "line": 68,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "threshold",
          "description": "Define a threshold value to draw a thin line across the chart at the y-axis position representing the threshold point.",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 76,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "threshold-label",
          "description": "Define custom text for your threshold label. Pass in the value as a string. Set the value to 'false' to remove the threshold label.",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 6
            },
            "end": {
              "line": 84,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "max",
          "description": "Define an upper bound for your data.",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 6
            },
            "end": {
              "line": 92,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "min",
          "description": "Define a lower bound for your data.",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 6
            },
            "end": {
              "line": 100,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "max-label",
          "description": "Define custom text for a chart's max label.\nThe values of your max will be used by default to render text labels to the axis bar on the left side of the chart.\nSet the value to 'false' to remove the label from the axis bar.",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 6
            },
            "end": {
              "line": 110,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "min-label",
          "description": "Define custom text for a chart's min label.\nThe values of your min will be used by default to render text labels to the axis bar on the left side of the chart.\nSet the value to 'false' to remove the labels from the axis bar.",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 6
            },
            "end": {
              "line": 120,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "columns",
          "description": "The number of vertical grid lines to be drawn in the background of the chart.",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 6
            },
            "end": {
              "line": 129,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "rows",
          "description": "The number of horizontal grid lines to be drawn in the background of the chart.",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 6
            },
            "end": {
              "line": 138,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "padding",
          "description": "The padding in the chart.",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 6
            },
            "end": {
              "line": 146,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "max-data-points",
          "description": "The max data points in the chart.",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 6
            },
            "end": {
              "line": 154,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "px-simple-line-chart"
    }
  ]
}
